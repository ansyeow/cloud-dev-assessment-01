apiVersion: v1
kind: ConfigMap
metadata:
  name: sinatra-app-files
  namespace: dev
data:
  sinatra_app.rb: |
    require "sinatra/base"
    require "socket"

    class SinatraApp < Sinatra::Base
      get "/" do
        # Print X-Forwarded-* headers
        # puts "X-Forwarded-Host: #{request.env["HTTP_X_FORWARDED_HOST"].inspect}"
        # puts "X-Forwarded-For: #{request.env["HTTP_X_FORWARDED_FOR"].inspect}"
        # puts "X-Forwarded-Proto: #{request.env["HTTP_X_FORWARDED_PROTO"].inspect}"
        # puts "X-Forwarded-Port: #{request.env["HTTP_X_FORWARDED_PORT"].inspect}"
        # puts "X-Real-IP: #{request.env["HTTP_X_REAL_IP"].inspect}"
        # puts "Server Hostname: #{Socket.gethostname}"
        # puts "Request Host: #{request.host}"

        query_params = request.query_string
        formatted_params = query_params.empty? ? "" : "?" + query_params
        client_ip = request.ip
        request_host = request.host
        server_hostname = Socket.gethostname
        puts "#{Time.now} - #{client_ip} - #{request_host} - #{server_hostname} -GET /#{formatted_params}"
        # puts "some message with a newline\nand more text"

        erb :index
      end
    end

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: sinatra-app-views-files
  namespace: dev
data:
  index.erb: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <title>Sinatra Demo</title>
      <link rel="stylesheet" href="/styles.css">
    </head>
    <body>
      <h1>Hello, Sinatra! Test 1</h1>
      <img src="/jelly-beans.jpg" />
      <pre>
        Client IP: <%= request.ip %>
      </pre>
    </body>
    </html>

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sinatra-app
  namespace: dev
spec:
  selector:
    matchLabels:
      app: sinatra
  replicas: 2
  template:
    metadata:
      labels:
        app: sinatra
    spec:
      containers:
      - name: sinatra
        image: "tongueroo/sinatra"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: sinatra-app-files-volume
          mountPath: /app
        volumeMounts:
        - name: sinatra-app-views-files-volume
          mountPath: /app/views
      volumes:
        - name: sinatra-app-files-volume
          configMap:
            name: sinatra-app-files
        - name: sinatra-app-views-files-volume
          configMap:
            name: sinatra-app-views-files

---

apiVersion: v1
kind: Service
metadata:
  name: sinatra-service
  namespace: dev
  labels:
    app: sinatra
spec:
  type: ClusterIP
  selector:
    app: sinatra
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP