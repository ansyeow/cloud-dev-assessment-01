apiVersion: v1
kind: Secret
metadata:
  name: backend-cred-01
  namespace: dev
type: Opaque
stringData:
  USERNAME: admin123
  PASSWORD: t0p-Secret

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: sinatra-app-files
  namespace: dev
data:
  sinatra_app.rb: |
    require "sinatra/base"
    require "socket"

    COUNT_FILE_PATH = "/data/disk_backed_count.txt"

    class SinatraApp < Sinatra::Base
      get "/" do
        disk_backed_count = read_disk_backed_count(COUNT_FILE_PATH)

        erb :index, :locals => {:disk_backed_count => disk_backed_count}
      end

      get "/count_inc" do
        disk_backed_count = read_disk_backed_count(COUNT_FILE_PATH)

        disk_backed_count += 1
        File.write(COUNT_FILE_PATH, disk_backed_count.to_s)

        result = { disk_backed_count: disk_backed_count }
        result.to_json
      end

      def read_disk_backed_count(count_file_path)
        if !File.exist?(count_file_path)
          File.write(count_file_path, "0")
        end
        disk_backed_count_str = File.read(count_file_path)

        disk_backed_count_str.to_i
      end
    end

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: sinatra-app-views-files
  namespace: dev
data:
  index.erb: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <title>Cloud Developer Assessment 02</title>
      <link rel="stylesheet" href="/styles.css">
    </head>
    <body>
      <pre>
        ENV['BACKEND_01_USERNAME']: <%= ENV['BACKEND_01_USERNAME'] %>
        ENV['BACKEND_01_PASSWORD']: <%= ENV['BACKEND_01_PASSWORD'] %>

        disk_backed_count: <%= disk_backed_count %>
        count_inc: <a href="count_inc">/count_inc<a>

        request.ip: <%= request.ip %>
        request.host: <%= request.host %>
        Socket.gethostname: <%= Socket.gethostname %>
      </pre>
    </body>
    </html>
